author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2109B)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nDuelists Mouf and Fouad enter the arena, which is an $n \\times\
  \ m$ grid!\n\nFouad's monster starts at cell $(a, b)$, where rows are numbered $1$\
  \ to $n$ and columns $1$ to $m$.\n\nMouf and Fouad will keep duelling until the\
  \ grid consists of only one cell.\n\nIn each turn:\n\n- Mouf first cuts the grid\
  \ along a row or column line into two parts, discarding the part without Fouad's\
  \ monster. Note that the grid must have at least two cells; otherwise, the game\
  \ has already ended.\n- After that, in the same turn, Fouad moves his monster to\
  \ any cell (possibly the same one it was in) within the remaining grid.\n\n![](https://espresso.codeforces.com/8b1099cc13f7e0c8fbf449b3e7f2fcd1c9eec0b9.png)Visualization\
  \ of the phases of the fourth test case.\n\nMouf wants to minimize the number of\
  \ turns, while Fouad wants to maximize them. How many turns will this epic duel\
  \ last if both play optimally?\n\n### Input\n\nEach test contains multiple test\
  \ cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$).\
  \ The description of the test cases follows.\n\nThe first and only line of each\
  \ test case contains four integers $n$, $m$, $a$, and $b$ ($2 \\le n, m \\le 10^9$,\
  \ $1 \\le a \\le n$, $1 \\le b \\le m$) -- denoting the number of rows, the number\
  \ of columns, the starting row of the monster, and the starting column of the monster,\
  \ respectively.\n\n### Output\n\nFor each test case, output a single integerÂ --\
  \ the number of turns this epic duel will last if both play optimally.\n\n### Example\n\
  \n#### Input #1\n\n```\n\n8\n\n2 2 1 1\n\n3 3 2 2\n\n2 7 1 4\n\n2 7 2 2\n\n8 9 4\
  \ 6\n\n9 9 5 5\n\n2 20 2 11\n\n22 99 20 70\n\n```\n\n#### Output #1\n\n```\n2\n\
  4\n4\n3\n6\n8\n6\n10\n```\n\n### Note\n\nIn the first test case, one possible duel\
  \ sequence is as follows:\n\n- Turn 1: Mouf cuts the grid horizontally along the\
  \ line between the rows $1$ and $2$, removing the bottom half and leaving a $1 \\\
  times 2$ grid.\n- Turn 1: Fouad's monster is at the cell $(1,1)$.\n- Turn 2: Mouf\
  \ cuts the $1 \\times 2$ grid again, removes one column, and isolates the cell $(1,1)$.\n\
  \nThe duel is completed in $2$ turns.\n\nIn the fourth case, one possible duel sequence\
  \ is as follows:\n\n- Turn 1: Mouf cuts the grid vertically along the line between\
  \ the columns $2$ and $3$, splitting it into a $2 \\times 2$ and a $2 \\times 5$\
  \ field, then removes the $2 \\times 5$ part.\n- Turn 1: Fouad moves the monster\
  \ to the cell $(1,1)$.\n- From this point on, the duel plays out just like the first\
  \ test case--two more turns trim down the grid from $2 \\times 2$ to a single $1\
  \ \\times 1$ cell.\n\nIn total, the duel is completed in $3$ turns.\n\nYou can refer\
  \ to the pictures mentioned in the problem statement for illustrations of the fourth\
  \ test case."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
