author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 1994E)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nYou are given a forest of $k$ rooted trees$^{\\text{∗}}$. Lumberjack\
  \ Timofey wants to cut down the entire forest by applying the following operation:\n\
  \n- Select a subtree$^{\\text{†}}$ of any vertex of one of the trees and remove\
  \ it from the tree.\n\nTimofey loves bitwise operations, so he wants the [bitwise\
  \ OR](https://en.wikipedia.org/wiki/Bitwise_operation#OR) of the sizes of the subtrees\
  \ he removed to be maximum. Help him and find the maximum result he can obtain.\n\
  \n$^{\\text{∗}}$ A tree is a connected graph without cycles, loops, or multiple\
  \ edges. In a rooted tree, a selected vertex is called a root. A forest is a collection\
  \ of one or more trees.\n\n$^{\\text{†}}$ The subtree of a vertex $v$ is the set\
  \ of vertices for which $v$ lies on the shortest path from this vertex to the root,\
  \ including $v$ itself.\n\n### Input\n\nEach test consists of multiple test cases.\
  \ The first line contains an integer $t$ ($1 \\leq t \\leq 10^4$) -- the number\
  \ of test cases. Then follows the description of the test cases.\n\nThe first line\
  \ of each test case contains a single integer $k$ ($1 \\leq k \\leq 10^6$) -- the\
  \ number of trees in the forest.\n\nThis is followed by a description of each of\
  \ the $k$ trees:\n\nThe first line contains a single integer $n$ ($1 \\leq n \\\
  leq 10^6$) -- the size of the tree. The vertices of the tree are numbered with integers\
  \ from $1$ to $n$. The root of the tree is vertex number $1$.\n\nThe second line\
  \ contains $n - 1$ integers $p_2, p_3, \\ldots p_n$ ($1 \\leq p_i < i$), where $p_i$ --\
  \ the parent of vertex $i$.\n\nIt is guaranteed that the sum of $k$ and $n$ for\
  \ all sets of input data does not exceed $10^6$.\n\n### Output\n\nFor each test\
  \ case, output a single integer -- the maximum result that can be obtained.\n\n\
  ### Example\n\n#### Input #1\n\n```\n\n3\n\n1\n\n1\n\n2\n\n4\n\n1 2 2\n\n6\n\n1\
  \ 1 3 1 3\n\n1\n\n10\n\n1 2 2 1 1 5 7 6 4\n\n```\n\n#### Output #1\n\n```\n1\n7\n\
  10\n```\n\n### Note\n\nIn the second test case, the trees look like this:\n\n![](https://espresso.codeforces.com/15fb9cc5074ad4f74fb9b209f518c862d2eb6f70.png)\n\
  \nThe first operation removes the entire second tree.\n\n![](https://espresso.codeforces.com/6f5a9bd039887467d5210d9f11eb6e0b1510cd43.png)\n\
  \nThe second operation removes vertex $4$ from the first tree.\n\n![](https://espresso.codeforces.com/30ecddcc00a758df892fa8d5727c438e610b6351.png)\n\
  \nThe third operation removes the first tree. The result is $6|1|3 = 7$ ($|$ denotes\
  \ bitwise OR).\n\nIn the third test case, the entire tree needs to be removed."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
