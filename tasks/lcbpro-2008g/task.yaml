author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2008G)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nSakurako has prepared a task for you:\n\nShe gives you an array\
  \ of $n$ integers and allows you to choose $i$ and $j$ such that $i \\neq j$ and\
  \ $a_i \\ge a_j$, and then assign $a_i = a_i - a_j$ or $a_i = a_i + a_j$. You can\
  \ perform this operation any number of times for any $i$ and $j$, as long as they\
  \ satisfy the conditions.\n\nSakurako asks you what is the maximum possible value\
  \ of $mex\\_k$$^{\\\\text{∗}}$ of the array after any number of operations.\n\n\
  $^{\\\\text{∗}}$$mex\\_k$ is the $k$-th non-negative integer that is absent in the\
  \ array. For example, $mex\\_1(\\\\{1,2,3 \\\\})=0$, since $0$ is the first element\
  \ that is not in the array, and $mex\\_2(\\\\{0,2,4 \\\\})=3$, since $3$ is the\
  \ second element that is not in the array.\n\n### Input\n\nThe first line contains\
  \ a single integer $t$ ($1\\le t\\le 10^4$)  -- the number of test cases.\n\nThe\
  \ first line of each test case contains two integers $n$ and $k$ ($1\\le n\\le 2\\\
  cdot 10^5,1\\le k\\le 10^9$)  -- the number of elements in the array and the value\
  \ $k$ for $mex_k$.\n\nThe second line of each test case contains $n$ integers $a_1,\
  \ a_2, \\dots,a_n$ ($1\\le a_i\\le 10^9$)  -- the elements of the array.\n\nIt is\
  \ guaranteed that the sum of $n$ across all test cases does not exceed $2\\cdot\
  \ 10^5$.\n\n### Output\n\nFor each test case, output the maximum $mex_k$ that can\
  \ be achieved through the operations.\n\n### Example\n\n#### Input #1\n\n```\n\n\
  6\n\n1 3\n\n3\n\n2 10\n\n1 1\n\n3 1\n\n1 2 3\n\n3 2\n\n1 2 4\n\n4 5\n\n2 2 2 16\n\
  \n4 5\n\n2 2 2 3\n\n```\n\n#### Output #1\n\n```\n2\n11\n3\n4\n8\n8\n```"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
