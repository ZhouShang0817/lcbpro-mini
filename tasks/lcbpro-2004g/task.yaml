author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: hard
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2004G)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nLet's define the operation of compressing a string $t$, consisting\
  \ of at least $2$ digits from $1$ to $9$, as follows:\n\n- split it into an even\
  \ number of non-empty substrings -- let these substrings be $t_1, t_2, \\dots, t_m$\
  \ (so, $t = t_1 + t_2 + \\dots + t_m$, where $+$ is the concatenation operation);\n\
  - write the string $t_2$ $t_1$ times, then the string $t_4$ $t_3$ times, and so\
  \ on.\n\nFor example, for a string \"12345\", one could do the following: split\
  \ it into (\"1\", \"23\", \"4\", \"5\"), and write \"235555\".\n\nLet the function\
  \ $f(t)$ for a string $t$ return the minimum length of the string that can be obtained\
  \ as a result of that process.\n\nYou are given a string $s$, consisting of $n$\
  \ digits from $1$ to $9$, and an integer $k$. Calculate the value of the function\
  \ $f$ for all contiguous substrings of $s$ of length exactly $k$.\n\n### Input\n\
  \nThe first line contains two integers $n$ and $k$ ($2 \\le k \\le n \\le 2 \\cdot\
  \ 10^5$).\n\nThe second line contains the string $s$ ($|s| = n$), consisting only\
  \ of digits from $1$ to $9$.\n\n### Output\n\nOutput $n - k + 1$ integers -- $f(s_{1,k}),\
  \ f(s_{2,k+1}), \\dots, f(s_{n - k + 1, n})$.\n\n### Examples\n\n#### Input #1\n\
  \n```\n\n4 4\n\n5999\n\n```\n\n#### Output #1\n\n```\n14\n```\n\n#### Input #2\n\
  \n```\n\n10 3\n\n1111111111\n\n```\n\n#### Output #2\n\n```\n2 2 2 2 2 2 2 2\n```\n\
  \n#### Input #3\n\n```\n\n11 4\n\n49998641312\n\n```\n\n#### Output #3\n\n```\n\
  12 18 17 15 12 7 7 2\n```"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
