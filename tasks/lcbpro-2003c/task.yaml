author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2003C)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nTurtle gives you a string $s$, consisting of lowercase Latin\
  \ letters.\n\nTurtle considers a pair of integers $(i, j)$ ($1 \\le i < j \\le n$)\
  \ to be a pleasant pair if and only if there exists an integer $k$ such that $i\
  \ \\le k < j$ and both of the following two conditions hold:\n\n- $s_k \\ne s_{k\
  \ + 1}$;\n- $s_k \\ne s_i$ or $s_{k + 1} \\ne s_j$.\n\nBesides, Turtle considers\
  \ a pair of integers $(i, j)$ ($1 \\le i < j \\le n$) to be a good pair if and only\
  \ if $s_i = s_j$ or $(i, j)$ is a pleasant pair.\n\nTurtle wants to reorder the\
  \ string $s$ so that the number of good pairs is maximized. Please help him!\n\n\
  ### Input\n\nEach test contains multiple test cases. The first line contains the\
  \ number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases\
  \ follows.\n\nThe first line of each test case contains a single integer $n$ ($2\
  \ \\le n \\le 2 \\cdot 10^5$) -- the length of the string.\n\nThe second line of\
  \ each test case contains a string $s$ of length $n$, consisting of lowercase Latin\
  \ letters.\n\nIt is guaranteed that the sum of $n$ over all test cases does not\
  \ exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the string\
  \ $s$ after reordering so that the number of good pairs is maximized. If there are\
  \ multiple answers, print any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n\
  5\n\n3\n\nabc\n\n5\n\nedddf\n\n6\n\nturtle\n\n8\n\npppppppp\n\n10\n\ncodeforces\n\
  \n```\n\n#### Output #1\n\n```\nacb\nddedf\nurtlet\npppppppp\ncodeforces\n```\n\n\
  ### Note\n\nIn the first test case, $(1, 3)$ is a good pair in the reordered string.\
  \ It can be seen that we can't reorder the string so that the number of good pairs\
  \ is greater than $1$. bac and cab can also be the answer.\n\nIn the second test\
  \ case, $(1, 2)$, $(1, 4)$, $(1, 5)$, $(2, 4)$, $(2, 5)$, $(3, 5)$ are good pairs\
  \ in the reordered string. efddd can also be the answer."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
