author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2077E)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nFor an array $b$ of length $m$, define $f(b)$ as follows.\n\n\
  Consider a $1 \\times m$ strip, where all cells initially have darkness $0$. You\
  \ want to transform it into a strip where the color at the $i$-th position has darkness\
  \ $b_i$. You can perform the following operation, which consists of two steps:\n\
  \n1. Fold the paper at any line between two cells. You may fold as many times as\
  \ you like, or choose not to fold at all.\n2. Choose one position to drop the black\
  \ dye. The dye permeates from the top and flows down to the bottom, increasing the\
  \ darkness of all cells in its path by $1$. After dropping the dye, you unfold the\
  \ strip.\n\nLet $f(b)$ be the minimum number of operations required to achieve the\
  \ desired configuration. It can be proven that the goal can always be achieved in\
  \ a finite number of operations.\n\nYou are given an array $a$ of length $n$. Evaluate\n\
  \n\n\n$$\\sum_{l=1}^n\\sum_{r=l}^n f(a_l a_{l+1} \\ldots a_r)$$\n\nmodulo $998\\\
  ,244\\,353$.\n\n### Input\n\nEach test contains multiple test cases. The first line\
  \ contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description\
  \ of the test cases follows.\n\nThe first line of each test case contains a single\
  \ integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^5$) -- the length of the array $a$.\n\
  \nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i \\\
  leq 10^9$) -- denoting the array $a$.\n\nIt is guaranteed that the sum of all values\
  \ of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\n\
  For each test case, output a single integer -- the required sum modulo $998\\,244\\\
  ,353$.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3\n\n0 1 0\n\n6\n\n1 0 0 1\
  \ 2 1\n\n5\n\n2 1 2 4 3\n\n12\n\n76 55 12 32 11 45 9 63 88 83 32 6\n\n```\n\n####\
  \ Output #1\n\n```\n4\n28\n47\n7001\n```\n\n### Note\n\nIn the first test case,\n\
  \n- $f(a_1)=f(\\mathtt{0})=0$\n- $f(a_1a_2)=f(\\mathtt{01})=1$\n- $f(a_1a_2a_3)=f(\\\
  mathtt{010})=1$\n- $f(a_2)=f(\\mathtt{1})=1$\n- $f(a_2a_3)=f(\\mathtt{10})=1$\n\
  - $f(a_3)=f(\\mathtt{0})=0$\n\nThis sums up to $0+1+1+1+1+0 = 4$\n\nIn the second\
  \ test case, $f(a_1a_2a_3a_4a_5a_6) = 2$. Here's one possible sequence of operations.\n\
  \n![](https://espresso.codeforces.com/7e858937391c04751be3558a4470a2f30d2bd683.png)"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
