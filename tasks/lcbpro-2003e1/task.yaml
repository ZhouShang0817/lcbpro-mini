author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2003E1)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThis is an easy version of this problem. The differences between\
  \ the versions are the constraint on $m$ and $r_i < l_{i + 1}$ holds for each $i$\
  \ from $1$ to $m - 1$ in the easy version. You can make hacks only if both versions\
  \ of the problem are solved.\n\nTurtle gives you $m$ intervals $[l_1, r_1], [l_2,\
  \ r_2], \\ldots, [l_m, r_m]$. He thinks that a permutation $p$ is interesting if\
  \ there exists an integer $k_i$ for every interval ($l_i \\le k_i < r_i$), and if\
  \ he lets $a_i = \\max\\limits_{j = l_i}^{k_i} p_j, b_i = \\min\\limits_{j = k_i\
  \ + 1}^{r_i} p_j$ for every integer $i$ from $1$ to $m$, the following condition\
  \ holds:\n\n\n\n$$\\max\\limits_{i = 1}^m a_i < \\min\\limits_{i = 1}^m b_i$$\n\n\
  Turtle wants you to calculate the maximum number of inversions of all interesting\
  \ permutations of length $n$, or tell him if there is no interesting permutation.\n\
  \nAn inversion of a permutation $p$ is a pair of integers $(i, j)$ ($1 \\le i <\
  \ j \\le n$) such that $p_i > p_j$.\n\n### Input\n\nEach test contains multiple\
  \ test cases. The first line contains the number of test cases $t$ ($1 \\le t \\\
  le 10^3$). The description of the test cases follows.\n\nThe first line of each\
  \ test case contains two integers $n, m$ ($2 \\le n \\le 5 \\cdot 10^3, 0 \\le m\
  \ \\le \\frac{n}{2}$) -- the length of the permutation and the number of intervals.\n\
  \nThe $i$-th of the following $m$ lines contains two integers $l_i, r_i$ ($1 \\\
  le l_i < r_i \\le n$) -- the $i$-th interval.\n\nAdditional constraint on the input\
  \ in this version: $r_i < l_{i + 1}$ holds for each $i$ from $1$ to $m - 1$.\n\n\
  It is guaranteed that the sum of $n$ over all test cases does not exceed $5 \\cdot\
  \ 10^3$.\n\n### Output\n\nFor each test case, if there is no interesting permutation,\
  \ output a single integer $-1$.\n\nOtherwise, output a single integer -- the maximum\
  \ number of inversions.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n2 0\n\n2\
  \ 1\n\n1 2\n\n5 1\n\n2 4\n\n8 2\n\n1 4\n\n6 8\n\n7 2\n\n1 3\n\n4 7\n\n7 3\n\n1 2\n\
  \n3 4\n\n5 6\n\n```\n\n#### Output #1\n\n```\n1\n0\n8\n21\n15\n15\n```\n\n### Note\n\
  \nIn the third test case, the interesting permutation with the maximum number of\
  \ inversions is $[5, 2, 4, 3, 1]$.\n\nIn the fourth test case, the interesting permutation\
  \ with the maximum number of inversions is $[4, 8, 7, 6, 3, 2, 1, 5]$. In this case,\
  \ we can let $[k_1, k_2] = [1, 7]$.\n\nIn the fifth test case, the interesting permutation\
  \ with the maximum number of inversions is $[4, 7, 6, 3, 2, 1, 5]$.\n\nIn the sixth\
  \ test case, the interesting permutation with the maximum number of inversions is\
  \ $[4, 7, 3, 6, 2, 5, 1]$."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
