author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2106A)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nIn order to test his patients' intelligence, Dr. TC created the\
  \ following test.\n\nFirst, he creates a binary string$^{\\text{∗}}$ $s$ having\
  \ $n$ characters. Then, he creates $n$ binary strings $a_1, a_2, \\ldots, a_n$.\
  \ It is known that $a_i$ is created by first copying $s$, then flipping the $i$'th\
  \ character ($\\texttt{1}$ becomes $\\texttt{0}$ and vice versa). After creating\
  \ all $n$ strings, he arranges them into a grid where the $i$'th row is $a_i$.\n\
  \nFor example,\n\n- If $s = \\texttt{101}$, $a = [\\texttt{001}, \\texttt{111},\
  \ \\texttt{100}]$.\n- If $s = \\texttt{0000}$, $a = [\\texttt{1000}, \\texttt{0100},\
  \ \\texttt{0010}, \\texttt{0001}]$.\n\nThe patient needs to count the number of\
  \ $1$s written on the board in less than a second. Can you pass the test?\n\n$^{\\\
  text{∗}}$A binary string is a string that only consists of characters $\\texttt{1}$\
  \ and $\\texttt{0}$.\n\n### Input\n\nThe first line of the input consists of a single\
  \ integer $t$ ($1 \\le t \\le 1000$) -- the number of test cases.\n\nThe first line\
  \ of each test case contains a single integer $n$ ($1 \\le n \\le 10$) -- the length\
  \ of the binary string $s$.\n\nThe second line of each test case contains a single\
  \ binary string $s$ of size $n$.\n\n### Output\n\nFor each test case, output a single\
  \ integer, the number of $\\texttt{1}$s on the board.\n\n### Example\n\n#### Input\
  \ #1\n\n```\n\n5\n\n3\n\n101\n\n1\n\n1\n\n5\n\n00000\n\n2\n\n11\n\n3\n\n010\n\n\
  ```\n\n#### Output #1\n\n```\n5\n0\n5\n2\n4\n```\n\n### Note\n\nThe first example\
  \ is explained in the statement.\n\nFor the second example, the only string written\
  \ on the board will be the string $\\texttt{0}$; therefore, the answer is $0$.\n\
  \nIn the third example, the following strings will be written on the board: $[\\\
  texttt{10000}, \\texttt{01000}, \\texttt{00100}, \\texttt{00010}, \\texttt{00001}]$;\
  \ so there are five $\\texttt{1}$s written on the board."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
