author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 1992B)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nTo celebrate his recovery, k1o0n has baked an enormous $n$ metres\
  \ long potato casserole.\n\nTurns out, Noobish\\_Monk just can't stand potatoes,\
  \ so he decided to ruin k1o0n's meal. He has cut it into $k$ pieces, of lengths\
  \ $a_1, a_2, \\dots, a_k$ meters.\n\nk1o0n wasn't keen on that. Luckily, everything\
  \ can be fixed. In order to do that, k1o0n can do one of the following operations:\n\
  \n- Pick a piece with length $a_i \\ge 2$ and divide it into two pieces with lengths\
  \ $1$ and $a_i - 1$. As a result, the number of pieces will increase by $1$;\n-\
  \ Pick a slice $a_i$ and another slice with length $a_j=1$ ($i \\ne j$) and merge\
  \ them into one piece with length $a_i+1$. As a result, the number of pieces will\
  \ decrease by $1$.\n\nHelp k1o0n to find the minimum number of operations he needs\
  \ to do in order to merge the casserole into one piece with length $n$.\n\nFor example,\
  \ if $n=5$, $k=2$ and $a = [3, 2]$, it is optimal to do the following:\n\n1. Divide\
  \ the piece with length $2$ into two pieces with lengths $2-1=1$ and $1$, as a result\
  \ $a = [3, 1, 1]$.\n2. Merge the piece with length $3$ and the piece with length\
  \ $1$, as a result $a = [4, 1]$.\n3. Merge the piece with length $4$ and the piece\
  \ with length $1$, as a result $a = [5]$.\n\n### Input\n\nEach test contains multiple\
  \ test cases. The first line contains the number of test cases $t$ ($1 \\le t \\\
  le 10^4$).\n\nDescription of each test case consists of two lines. The first line\
  \ contains two integers $n$ and $k$ ($2 \\le n \\le 10^9$, $2 \\le k \\le 10^5$) --\
  \ length of casserole and the number of pieces.\n\nThe second line contains $k$\
  \ integers $a_1, a_2, \\ldots, a_k$ ($1 \\le a_i \\le n - 1$, $\\sum a_i = n$) --\
  \ lengths of pieces of casserole, which Noobish\\_Monk has cut.\n\nIt is guaranteed\
  \ that the sum of $k$ over all $t$ test cases doesn't exceed $2 \\cdot 10^5$.\n\n\
  ### Output\n\nFor each test case, output the minimum number of operations K1o0n\
  \ needs to restore his pie after the terror of Noobish\\_Monk.\n\n### Example\n\n\
  #### Input #1\n\n```\n\n4\n\n5 3\n\n3 1 1\n\n5 2\n\n3 2\n\n11 4\n\n2 3 1 5\n\n16\
  \ 6\n\n1 6 1 1 1 6\n\n```\n\n#### Output #1\n\n```\n2\n3\n9\n15\n```"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
