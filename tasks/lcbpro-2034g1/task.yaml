author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: hard
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2034G1)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThe only difference between the two versions of the problem is\
  \ whether overlaps are considered at all points or only at integer points.\n\nThe\
  \ legendary [Simurgh](https://www.eavartravel.com/blog/2023/11/3/140727/simurgh/),\
  \ a mythical bird, is responsible for keeping watch over vast lands, and for this\
  \ purpose, she has enlisted $n$ vigilant warriors. Each warrior is alert during\
  \ a specific time segment $[l_i, r_i]$, where $l_i$ is the start time (included)\
  \ and $r_i$ is the end time (included), both positive integers.\n\n![](https://espresso.codeforces.com/e448e919c3f03a9c212cd45c8dcd8e2bb0be579c.webp)\n\
  \nOne of Simurgh's trusted advisors, [Zal](https://asia-archive.si.edu/learn/shahnama/zal-and-the-simurgh/),\
  \ is concerned that if multiple warriors are stationed at the same time and all\
  \ wear the same color, the distinction between them might be lost, causing confusion\
  \ in the watch. To prevent this, whenever multiple warriors are on guard at the\
  \ same moment (which can be non-integer), there must be at least one color which\
  \ is worn by exactly one warrior.\n\nSo the task is to determine the minimum number\
  \ of colors required and assign a color $c_i$ to each warrior's segment $[l_i, r_i]$\
  \ such that, for every (real) time $t$ contained in at least one segment, there\
  \ exists one color which belongs to exactly one segment containing $t$.\n\n### Input\n\
  \nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) -- the number\
  \ of test cases.\n\nFor each test case:\n\n- The first line contains an integer\
  \ $n$ ($1 \\leq n \\leq 2 \\cdot 10^5$) -- the number of warriors stationed by Simurgh.\n\
  - The next $n$ lines each contain two integers $l_i$ and $r_i$ ($1 \\leq l_i \\\
  leq r_i \\leq 10^9$) -- the start and end times of the warrior's watch segment.\n\
  \nThe sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\
  \nFor each test case:\n\n- Output the minimum number of colors $k$ needed.\n- Then,\
  \ output a line of $n$ integers $c_i$ ($1 \\leq c_i \\leq k$), where each $c_i$\
  \ is the color assigned to the $i$-th warrior.\n\n### Example\n\n#### Input #1\n\
  \n```\n\n5\n\n2\n\n1 2\n\n3 4\n\n2\n\n1 2\n\n2 3\n\n3\n\n1 4\n\n2 5\n\n3 6\n\n5\n\
  \n1 4\n\n2 8\n\n3 7\n\n5 10\n\n6 9\n\n5\n\n1 5\n\n2 6\n\n3 7\n\n4 7\n\n6 7\n\n```\n\
  \n#### Output #1\n\n```\n1\n1 1\n2\n1 2\n2\n1 2 1\n3\n2 3 1 2 1\n3\n2 1 3 1 1\n\
  ```\n\n### Note\n\nWe can represent each warrior's watch segment as an interval\
  \ on the X-axis;\n\nIn test case 1, we have two independent intervals, which can\
  \ be colored with the same color.\n\nIn test case 2, point 2 is common to two intervals,\
  \ meaning we cannot color them with the same color.\n\nIn test case 3, the intervals\
  \ can be colored as shown below (intervals are colored with the selected color;\
  \ areas are colored if this color occurs exactly once at this point in time):\n\n\
  ![](https://espresso.codeforces.com/1eeed6dfbcfe689a12402fd0576537c6eb264ba6.png)\n\
  \nIn test case 4, the intervals can be colored as shown below:\n\n![](https://espresso.codeforces.com/02b07d5906fa80a7ce5d78b298d588ee74fd7901.png)\n\
  \nIn test case 5, the intervals can be colored as shown below. The image on the\
  \ right demonstrates an example of incorrect coloring for this test case; there\
  \ is no unique color at the moment $5.5$:\n\n![](https://espresso.codeforces.com/21eeb6213de774e9bd333f733bb2c5f3f256e35c.png)"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
