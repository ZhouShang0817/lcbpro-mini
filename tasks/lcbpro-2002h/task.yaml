author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: hard
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2002H)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nIt's been a long summer's day, with the constant chirping of\
  \ cicadas and the heat which never seemed to end. Finally, it has drawn to a close.\
  \ The showdown has passed, the gates are open, and only a gentle breeze is left\
  \ behind.\n\nYour predecessors had taken their final bow; it's your turn to take\
  \ the stage.\n\nSorting through some notes that were left behind, you found a curious\
  \ statement named Problem 101:\n\n- Given a positive integer sequence $a_1,a_2,\\\
  ldots,a_n$, you can operate on it any number of times. In an operation, you choose\
  \ three consecutive elements $a_i,a_{i+1},a_{i+2}$, and merge them into one element\
  \ $\\max(a_i+1,a_{i+1},a_{i+2}+1)$. Please calculate the maximum number of operations\
  \ you can do without creating an element greater than $m$.\n\nAfter some thought,\
  \ you decided to propose the following problem, named Counting 101:\n\n- Given $n$\
  \ and $m$. For each $k=0,1,\\ldots,\\left\\lfloor\\frac{n-1}{2}\\right\\rfloor$,\
  \ please find the number of integer sequences $a_1,a_2,\\ldots,a_n$ with elements\
  \ in $[1, m]$, such that when used as input for Problem 101, the answer is $k$.\
  \ As the answer can be very large, please print it modulo $10^9+7$.\n\n### Input\n\
  \nEach test contains multiple test cases. The first line contains the number of\
  \ test cases $t$ ($1\\le t\\le10^3$). The description of the test cases follows.\n\
  \nThe only line of each test case contains two integers $n$, $m$ ($1\\le n\\le 130$,\
  \ $1\\le m\\le 30$).\n\n### Output\n\nFor each test case, output $\\left\\lfloor\\\
  frac{n+1}{2}\\right\\rfloor$ numbers. The $i$-th number is the number of valid sequences\
  \ such that when used as input for Problem 101, the answer is $i-1$, modulo $10^9+7$.\n\
  \n### Example\n\n#### Input #1\n\n```\n\n2\n\n3 2\n\n10 10\n\n```\n\n#### Output\
  \ #1\n\n```\n6 2\n1590121 23399118 382293180 213020758 379696760\n```\n\n### Note\n\
  \nIn the first test case, there are $2^3=8$ candidate sequences. Among them, you\
  \ can operate on $[1,2,1]$ and $[1,1,1]$ once; you cannot operate on the other $6$\
  \ sequences."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
