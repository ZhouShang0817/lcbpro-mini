author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2007C)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nDora has just learned the programming language C++!\n\nHowever,\
  \ she has completely misunderstood the meaning of C++. She considers it as two kinds\
  \ of adding operations on the array $c$ with $n$ elements. Dora has two integers\
  \ $a$ and $b$. In one operation, she can choose one of the following things to do.\n\
  \n- Choose an integer $i$ such that $1 \\leq i \\leq n$, and increase $c_i$ by $a$.\n\
  - Choose an integer $i$ such that $1 \\leq i \\leq n$, and increase $c_i$ by $b$.\n\
  \nNote that $a$ and $b$ are constants, and they can be the same.\n\nLet's define\
  \ a range of array $d$ as $\\max(d_i) - \\min(d_i)$. For instance, the range of\
  \ the array $[1, 2, 3, 4]$ is $4 - 1 = 3$, the range of the array $[5, 2, 8, 2,\
  \ 2, 1]$ is $8 - 1 = 7$, and the range of the array $[3, 3, 3]$ is $3 - 3 = 0$.\n\
  \nAfter any number of operations (possibly, $0$), Dora calculates the range of the\
  \ new array. You need to help Dora minimize this value, but since Dora loves exploring\
  \ all by herself, you only need to tell her the minimized value.\n\n### Input\n\n\
  Each test consists of multiple test cases. The first line contains a single integer\
  \ $t$ ($1 \\leq t \\leq 10^4$) -- the number of test cases. The description of test\
  \ cases follows.\n\nThe first line of each test case contains three integers $n$,\
  \ $a$, and $b$ ($1 \\leq n \\leq 10^5$, $1 \\leq a, b \\leq 10^9$) -- the length\
  \ of the array $c$ and the constant values, respectively.\n\nThe second line of\
  \ each test case contains $n$ integers $c_1, c_2, \\ldots, c_n$ ($1 \\leq c_i \\\
  leq 10^9$) -- the initial elements of the array $c$.\n\nIt is guaranteed that the\
  \ sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each\
  \ test case, output a single integer -- the minimum possible range of the array\
  \ after any number of operations.\n\n### Example\n\n#### Input #1\n\n```\n\n10\n\
  \n4 5 5\n\n1 3 4 4\n\n4 2 3\n\n1 3 4 6\n\n4 7 7\n\n1 1 2 6\n\n3 15 9\n\n1 9 5\n\n\
  3 18 12\n\n1 4 5\n\n7 27 36\n\n33 13 23 12 35 24 41\n\n10 6 9\n\n15 5 6 9 8 2 12\
  \ 15 3 8\n\n2 1 1000000000\n\n1 1000000000\n\n6 336718728 709848696\n\n552806726\
  \ 474775724 15129785 371139304 178408298 13106071\n\n6 335734893 671469786\n\n138885253\
  \ 70095920 456876775 9345665 214704906 375508929\n\n```\n\n#### Output #1\n\n```\n\
  3\n0\n3\n2\n3\n5\n1\n0\n17\n205359241\n```\n\n### Note\n\nIn the first test case,\
  \ we can increase $c_1 = 1$ by $a = 5$. The array $c$ will become $[6, 3, 4, 4]$,\
  \ and the range is $3$. Note that there is more than one way to reach the answer.\n\
  \nIn the second test case, we can increase $c_1 = 1$ by $a = 2$ and then increase\
  \ $c_1 = 3$ by $b = 3$. Also, we can increase $c_2 = 3$ by $b = 3$ and increase\
  \ $c_3 = 4$ by $a = 2$. The array $c$ will become $[6, 6, 6, 6]$, and the range\
  \ is $0$."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
