author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2062E2)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThis is the hard version of the problem. The difference between\
  \ the versions is that in this version, you need to find all possible nodes Cirno\
  \ may choose. You can hack only if you solved all versions of this problem.\n\n\
  Cirno and Daiyousei are playing a game with a tree$^{\\text{∗}}$ of $n$ nodes, rooted\
  \ at node $1$. The value of the $i$-th node is $w_i$. They take turns to play the\
  \ game; Cirno goes first.\n\nIn each turn, assuming the opponent chooses $j$ in\
  \ the last turn, the player can choose any remaining node $i$ satisfying $w_i>w_j$\
  \ and delete the subtree$^{\\text{†}}$ of node $i$. In particular, Cirno can choose\
  \ any node and delete its subtree in the first turn.\n\nThe first player who can\
  \ not operate wins, and they all hope to win. Find all possible nodes Cirno may\
  \ choose in the first turn so that she wins if both of them play optimally.\n\n\
  $^{\\text{∗}}$A tree is a connected graph without cycles.\n\n$^{\\text{†}}$Node\
  \ $u$ is considered in the subtree of node $i$ if any path from $1$ to $u$ must\
  \ go through $i$.\n\n### Input\n\nThe first line of input contains a single integer\
  \ $t$ ($1 \\leq t \\leq 10^5$) -- the number of input test cases.\n\nThe first line\
  \ of each test case contains one integer $n$ ($1 \\le n \\le 4\\cdot 10^5$) -- the\
  \ number of nodes in the tree.\n\nThe second line contains $n$ integers $w_1,w_2,\\\
  ldots,w_n$ ($1 \\le w_i \\le n$) -- the value of each node.\n\nThe next $n-1$ lines\
  \ contain the edges of the tree. The $i$-th line contains two integers $u_i,v_i$\
  \ ($1\\le u_i,v_i \\le n$, $u_i \\neq v_i$) -- an edge connecting $u_i$ and $v_i$.\
  \ It is guaranteed that the given edges form a tree.\n\nIt is guaranteed that the\
  \ sum of $n$ over all test cases does not exceed $4\\cdot 10^5$.\n\n### Output\n\
  \nFor each test case, print one line.\n\nIf Cirno wins the game, print several integers.\
  \ The first integer $k$ represents the number of possible nodes she may choose in\
  \ the first turn. The other $k$ integers are all possible nodes in increasing order.\n\
  \nOtherwise, print \"0\" (without quotes).\n\n### Example\n\n#### Input #1\n\n```\n\
  \n5\n\n4\n\n2 2 4 3\n\n1 2\n\n1 3\n\n2 4\n\n5\n\n1 2 3 4 5\n\n1 2\n\n2 3\n\n3 4\n\
  \n4 5\n\n3\n\n1 2 3\n\n1 2\n\n1 3\n\n5\n\n3 1 3 4 5\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\
  \n10\n\n1 2 3 2 4 3 3 4 4 3\n\n1 4\n\n4 6\n\n7 4\n\n6 9\n\n6 5\n\n7 8\n\n1 2\n\n\
  2 3\n\n2 10\n\n```\n\n#### Output #1\n\n```\n2 2 4\n0\n1 2\n1 2\n5 3 4 6 7 10\n\
  ```\n\n### Note\n\nIn the first test case:\n\n1. If Cirno chooses $1$ or $3$ in\
  \ the first turn, Daiyousei cannot make a move, so Daiyousei wins.\n2. If Cirno\
  \ chooses $2$ or $4$ in the first turn, Daiyousei can only choose $3$, but after\
  \ it Cirno cannot make a move, so Cirno wins.\n\nTherefore, all possible nodes Cirno\
  \ may choose are $2$ and $4$.\n\nIn the second test case, regardless of which node\
  \ Cirno chooses, Daiyousei cannot make a move, so Daiyousei wins.\n\nIn the third\
  \ and fourth test case, the only possible node Cirno may choose in the first turn\
  \ is $2$.\n\nIn the fifth test case, all possible nodes Cirno may choose in the\
  \ first turn are $3,4,6,7$ and $10$."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
