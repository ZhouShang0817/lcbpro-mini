author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2097C)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThe Bermuda Triangle -- a mysterious area in the Atlantic Ocean\
  \ where, according to rumors, ships and airplanes disappear without a trace. Some\
  \ blame magnetic anomalies, others -- portals to other worlds, but the truth remains\
  \ hidden in a fog of mysteries.\n\nA regular passenger flight 814 was traveling\
  \ from Miami to Nassau on a clear sunny day. Nothing foreshadowed trouble until\
  \ the plane entered a zone of strange flickering fog. Radio communication was interrupted,\
  \ the instruments spun wildly, and flashes of unearthly light flickered outside\
  \ the windows.\n\nFor simplicity, we will assume that the Bermuda Triangle and the\
  \ airplane are on a plane, and the vertices of the triangle have coordinates $(0,\
  \ 0)$, $(0, n)$, and $(n, 0)$. Initially, the airplane is located at the point $(x,\
  \ y)$ strictly inside the Bermuda Triangle and is moving with a velocity vector\
  \ $(v_x, v_y)$. All instruments have failed, so the crew cannot control the airplane.\n\
  \nThe airplane can escape from the triangle if it ever reaches exactly one of the\
  \ vertices of the triangle. However, if at any moment (possibly non-integer) the\
  \ airplane hits the boundary of the triangle (but not at a vertex), its velocity\
  \ vector is immediately reflected relative to that side$^\\dagger$, and the airplane\
  \ continues to move in the new direction.\n\nDetermine whether the airplane can\
  \ ever escape from the Bermuda Triangle (i.e., reach exactly one of its vertices).\
  \ If this is possible, also calculate how many times before that moment the airplane\
  \ will hit the boundary of the triangle (each touch of the boundary, even at the\
  \ same point, counts; crossing a vertex does not count).\n\n$^\\dagger$ Reflection\
  \ occurs according to the usual laws of physics. The angle of incidence equals the\
  \ angle of reflection.\n\n### Input\n\nEach test contains multiple test cases. The\
  \ first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description\
  \ of the test cases follows.\n\nThe only line of each test case contains five integers\
  \ $n$, $x$, $y$, $v_x$, and $v_y$ ($3 \\le n \\le 10^9$, $1 \\le x, y$, $x+y < n$,\
  \ $1 \\le v_x, v_y \\le 10^9$) -- numbers describing the vertices of the triangle,\
  \ the initial coordinates of the airplane, and the initial velocity vector.\n\n\
  ### Output\n\nFor each test case, output a single integer -- the number of times\
  \ the airplane will hit the boundary of the triangle before it escapes. If the airplane\
  \ never escapes from the triangle, output $-1$.\n\n### Example\n\n#### Input #1\n\
  \n```\n\n6\n\n6 2 2 5 2\n\n6 2 2 20 8\n\n4 1 2 1 1\n\n4 1 1 1 2\n\n4 1 1 2 1\n\n\
  6 2 3 2 3\n\n```\n\n#### Output #1\n\n```\n2\n2\n-1\n-1\n-1\n5\n```\n\n### Note\n\
  \nAn illustration for the first test case is provided below:\n\n![](https://espresso.codeforces.com/b61bf649673fea524553cda5382f6c8b913e886d.png)\n\
  \nIn the second test case, the answer is the same as in the first, as all initial\
  \ data, except for the speed, are the same, but the airplanes are initially moving\
  \ in the same direction.\n\nIn the third test case, the answer is $-1$, as the airplane\
  \ will move exclusively along the segments marked in green. An illustration is provided\
  \ below:\n\n![](https://espresso.codeforces.com/a9f5835b971419e77d90e52946f6bf0f9559d1d8.png)"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
