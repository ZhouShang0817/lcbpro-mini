author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: easy
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 1997D)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nYou are given a rooted tree, consisting of $n$ vertices. The\
  \ vertices in the tree are numbered from $1$ to $n$, and the root is the vertex\
  \ $1$. The value $a_i$ is written at the $i$-th vertex.\n\nYou can perform the following\
  \ operation any number of times (possibly zero): choose a vertex $v$ which has at\
  \ least one child; increase $a_v$ by $1$; and decrease $a_u$ by $1$ for all vertices\
  \ $u$ that are in the subtree of $v$ (except $v$ itself). However, after each operation,\
  \ the values on all vertices should be non-negative.\n\nYour task is to calculate\
  \ the maximum possible value written at the root using the aforementioned operation.\n\
  \n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) --\
  \ the number of test cases.\n\nThe first line of each test case contains a single\
  \ integer $n$ ($2 \\le n \\le 2 \\cdot 10^5$) -- the number of vertices in the tree.\n\
  \nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i \\\
  le 10^9$) -- the initial values written at vertices.\n\nThe third line contains\
  \ $n-1$ integers $p_2, p_3, \\dots, p_n$ ($1 \\le p_i \\le n$), where $p_i$ is the\
  \ parent of the $i$-th vertex in the tree. Vertex $1$ is the root.\n\nAdditional\
  \ constraint on the input: the sum of $n$ over all test cases doesn't exceed $2\
  \ \\cdot 10^5$.\n\n### Output\n\nFor each test case, print a single integer -- the\
  \ maximum possible value written at the root using the aforementioned operation.\n\
  \n### Example\n\n#### Input #1\n\n```\n\n3\n\n4\n\n0 1 0 2\n\n1 1 3\n\n2\n\n3 0\n\
  \n1\n\n5\n\n2 5 3 9 6\n\n3 1 5 2\n\n```\n\n#### Output #1\n\n```\n1\n3\n6\n```\n\
  \n### Note\n\nIn the first test case, the following sequence of operations is possible:\n\
  \n- perform the operation on $v=3$, then the values on the vertices will be $[0,\
  \ 1, 1, 1]$;\n- perform the operation on $v=1$, then the values on the vertices\
  \ will be $[1, 0, 0, 0]$."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
