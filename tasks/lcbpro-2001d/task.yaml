author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2001D)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nYou are given an integer sequence $a_1, a_2, \\ldots, a_n$. Let\
  \ $S$ be the set of all possible non-empty subsequences of $a$ without duplicate\
  \ elements. Your goal is to find the longest sequence in $S$. If there are multiple\
  \ of them, find the one that minimizes lexicographical order after multiplying terms\
  \ at odd positions by $-1$.\n\nFor example, given $a = [3, 2, 3, 1]$, $S = \\{[1],\
  \ [2], [3], [2, 1], [2, 3], [3, 1], [3, 2], [2, 3, 1], [3, 2, 1]\\}$. Then $[2,\
  \ 3, 1]$ and $[3, 2, 1]$ would be the longest, and $[3, 2, 1]$ would be the answer\
  \ since $[-3, 2, -1]$ is lexicographically smaller than $[-2, 3, -1]$.\n\nA sequence\
  \ $c$ is a subsequence of a sequence $d$ if $c$ can be obtained from $d$ by the\
  \ deletion of several (possibly, zero or all) elements.\n\nA sequence $c$ is lexicographically\
  \ smaller than a sequence $d$ if and only if one of the following holds:\n\n- $c$\
  \ is a prefix of $d$, but $c \\ne d$;\n- in the first position where $c$ and $d$\
  \ differ, the sequence $c$ has a smaller element than the corresponding element\
  \ in $d$.\n\n### Input\n\nEach test contains multiple test cases. The first line\
  \ contains the number of test cases $t$ ($1 \\le t \\le 5 \\cdot 10^4$). The description\
  \ of the test cases follows.\n\nThe first line of each test case contains an integer\
  \ $n$ ($1 \\le n \\le 3 \\cdot 10^5$) -- the length of $a$.\n\nThe second line of\
  \ each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\\
  le n$) -- the sequence $a$.\n\nIt is guaranteed that the sum of $n$ over all test\
  \ cases does not exceed $3 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output\
  \ the answer in the following format:\n\nOutput an integer $m$ in the first line\
  \ -- the length of $b$.\n\nThen output $m$ integers $b_1, b_2, \\ldots, b_m$ in\
  \ the second line -- the sequence $b$.\n\n### Examples\n\n#### Input #1\n\n```\n\
  \n4\n\n4\n\n3 2 1 3\n\n4\n\n1 1 1 1\n\n9\n\n3 2 1 3 2 1 3 2 1\n\n1\n\n1\n\n```\n\
  \n#### Output #1\n\n```\n3\n3 2 1\n1\n1\n3\n3 1 2\n1\n1\n```\n\n#### Input #2\n\n\
  ```\n\n10\n\n2\n\n1 2\n\n10\n\n5 2 1 7 9 7 2 5 5 2\n\n2\n\n1 2\n\n10\n\n2 2 8 7\
  \ 7 9 8 1 9 6\n\n9\n\n9 1 7 5 8 5 6 4 1\n\n3\n\n3 3 3\n\n6\n\n1 6 4 4 6 5\n\n6\n\
  \n3 4 4 5 3 3\n\n10\n\n4 1 4 5 4 5 10 1 5 1\n\n7\n\n1 2 1 3 2 4 6\n\n```\n\n####\
  \ Output #2\n\n```\n2\n1 2\n5\n5 1 9 7 2\n2\n1 2\n6\n2 7 9 8 1 6\n7\n9 1 7 5 8 6\
  \ 4\n1\n3\n4\n1 4 6 5\n3\n4 5 3\n4\n5 4 10 1\n5\n2 1 3 4 6\n```\n\n### Note\n\n\
  In the first example, $S = \\{[1], [2], [3], [1, 3], [2, 1], [2, 3], [3, 1], [3,\
  \ 2], [2, 1, 3], [3, 2, 1]\\}$. Among them, $[2, 1, 3]$ and $[3, 2, 1]$ are the\
  \ longest and $[-3, 2, -1]$ is lexicographical smaller than $[-2, 1, -3]$, so $[3,\
  \ 2, 1]$ is the answer.\n\nIn the second example, $S = \\{[1]\\}$, so $[1]$ is the\
  \ answer."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
