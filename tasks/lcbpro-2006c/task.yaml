author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2006C)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nLet there be a set that contains distinct positive integers.\
  \ To expand the set to contain as many integers as possible, Eri can choose two\
  \ integers $x\\neq y$ from the set such that their average $\\frac{x+y}2$ is still\
  \ a positive integer and isn't contained in the set, and add it to the set. The\
  \ integers $x$ and $y$ remain in the set.\n\nLet's call the set of integers consecutive\
  \ if, after the elements are sorted, the difference between any pair of adjacent\
  \ elements is $1$. For example, sets $\\{2\\}$, $\\{2, 5, 4, 3\\}$, $\\{5, 6, 8,\
  \ 7\\}$ are consecutive, while $\\{2, 4, 5, 6\\}$, $\\{9, 7\\}$ are not.\n\nEri\
  \ likes consecutive sets. Suppose there is an array $b$, then Eri puts all elements\
  \ in $b$ into the set. If after a finite number of operations described above, the\
  \ set can become consecutive, the array $b$ will be called brilliant.\n\nNote that\
  \ if the same integer appears in the array multiple times, we only put it into the\
  \ set once, as a set always contains distinct positive integers.\n\nEri has an array\
  \ $a$ of $n$ positive integers. Please help him to count the number of pairs of\
  \ integers $(l,r)$ such that $1 \\leq l \\leq r \\leq n$ and the subarray $a_l,\
  \ a_{l+1}, \\ldots, a_r$ is brilliant.\n\n### Input\n\nEach test consists of multiple\
  \ test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) --\
  \ the number of test cases. The description of the test cases follows.\n\nThe first\
  \ line of each test case contains a single integer $n$ ($1 \\leq n \\leq 4 \\cdot\
  \ 10^5$) -- length of the array $a$.\n\nThe second line of each test case contains\
  \ $n$ integers $a_1, a_2, \\ldots a_n$ ($1 \\leq a_i \\leq 10^9$) -- the elements\
  \ of the array $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases\
  \ doesn't exceed $4 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a\
  \ single integer -- the number of brilliant subarrays.\n\n### Example\n\n#### Input\
  \ #1\n\n```\n\n6\n\n2\n\n2 2\n\n6\n\n1 3 6 10 15 21\n\n5\n\n6 30 18 36 9\n\n1\n\n\
  1000000000\n\n6\n\n1 1 4 5 1 4\n\n12\n\n70 130 90 90 90 108 612 500 451 171 193\
  \ 193\n\n```\n\n#### Output #1\n\n```\n3\n18\n5\n1\n18\n53\n```\n\n### Note\n\n\
  In the first test case, the array $a = [2, 2]$ has $3$ subarrays: $[2]$, $[2]$,\
  \ and $[2, 2]$. For all of them, the set only contains a single integer $2$, therefore\
  \ it's always consecutive. All these subarrays are brilliant, so the answer is $3$.\n\
  \nIn the second test case, let's consider the subarray $[3, 6, 10]$. We can do operations\
  \ as follows:\n\n\n\n$$\\{3,6,10\\} \\xrightarrow{x=6,y=10} \\{3,6,8,10\\} \\xrightarrow{x=6,y=8}\
  \ \\{3,6,7,8,10\\} \\xrightarrow{x=3,y=7} \\{3,5,6,7,8,10\\}$$\n\nxrightarrow{x=3,y=5}\
  \ \\{3,4,5,6,7,8,10\\} \\xrightarrow{x=8,y=10} \\{3,4,5,6,7,8,9,10\\}$$\n\n$\\{3,4,5,6,7,8,9,10\\\
  }$ is a consecutive set, so the subarray $[3, 6, 10]$ is brilliant."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
