author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: medium
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2027E1)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThis is the easy version of this problem. The only difference\
  \ is that you need to output the winner of the game in this version, and the number\
  \ of stones in each pile are fixed. You must solve both versions to be able to hack.\n\
  \nAlice and Bob are playing a familiar game where they take turns removing stones\
  \ from $n$ piles. Initially, there are $x_i$ stones in the $i$-th pile, and it has\
  \ an associated value $a_i$. A player can take $d$ stones away from the $i$-th pile\
  \ if and only if both of the following conditions are met:\n\n- $1 \\le d \\le a_i$,\
  \ and\n- $x \\, \\& \\, d = d$, where $x$ is the current number of stones in the\
  \ $i$-th pile and $\\&$ denotes the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND).\n\
  \nThe player who cannot make a move loses, and Alice goes first.\n\nYou're given\
  \ the $a_i$ and $x_i$ values for each pile, please determine who will win the game\
  \ if both players play optimally.\n\n### Input\n\nEach test contains multiple test\
  \ cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$).\
  \ The description of the test cases follows.\n\nThe first line of each test case\
  \ contains $n$ ($1 \\le n \\le 10^4$)Â -- the number of piles.\n\nThe second line\
  \ of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i\
  \ < 2^{30}$).\n\nThe third line of each test case contains $n$ integers $x_1, x_2,\
  \ \\ldots, x_n$ ($1 \\le x_i < 2^{30}$).\n\nIt is guaranteed that the sum of $n$\
  \ over all test cases does not exceed $10^4$.\n\n### Output\n\nPrint a single line\
  \ with the winner's name. If Alice wins, print \"Alice\", otherwise print \"Bob\"\
  \ (without quotes).\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n2\n\n1 6\n\n\
  10 7\n\n3\n\n10 8 15\n\n25 4 14\n\n4\n\n8 32 65 64\n\n7 45 126 94\n\n3\n\n20 40\
  \ 1\n\n23 55 1\n\n5\n\n12345 9876 86419 8641 1\n\n6789 54321 7532 97532 1\n\n2\n\
  \n20 64\n\n44 61\n\n3\n\n57 109 55\n\n69 90 85\n\n```\n\n#### Output #1\n\n```\n\
  Bob\nBob\nBob\nBob\nBob\nAlice\nAlice\n```\n\n### Note\n\nIn the first test case,\
  \ neither player can take any stones from the first pile since there is no value\
  \ of $d$ satisfying the conditions. For the second pile, to begin with, Alice can\
  \ remove between $1$ and $6$ stones. No matter which move Alice performs, Bob can\
  \ remove the rest of the stones on his turn. After Bob's move, there are no more\
  \ moves that Alice can perform, so Bob wins.\n\nIn the second test case, here is\
  \ one example of how the game might go. Alice moves first, and she decides to remove\
  \ from the first pile. She cannot take $17$ stones, because $17 > 10$, which fails\
  \ the first condition. She cannot take $10$ stones, because $25 \\, \\& \\, 10 =\
  \ 8$ which fails the second condition. One option is to take $9$ stones; now the\
  \ pile has $16$ stones left. On Bob's turn he decides to take stones from the second\
  \ pile; the only option here is to take all $4$. Now, no more stones can be taken\
  \ from either of the first two piles, so Alice must take some stones from the last\
  \ pile. She decides to take $12$ stones, and Bob then follows by taking the last\
  \ $2$ stones on that pile. Since Alice now has no legal moves left, Bob wins. It\
  \ can be shown that no matter which strategy Alice follows, Bob will always be able\
  \ to win if he plays optimally."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
