author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: hard
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2046E2)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nThis is the hard version of the problem. The difference between\
  \ the versions is that in this version, $m$ is arbitrary. You can hack only if you\
  \ solved all versions of this problem.\n\nThere is a problem-solving competition\
  \ in Ancient Egypt with $n$ participants, numbered from $1$ to $n$. Each participant\
  \ comes from a certain city; the cities are numbered from $1$ to $m$. There is at\
  \ least one participant from each city.\n\nThe $i$-th participant has strength $a_i$,\
  \ specialization $s_i$, and wisdom $b_i$, so that $b_i \\ge a_i$. Each problem in\
  \ the competition will have a difficulty $d$ and a unique topic $t$. The $i$-th\
  \ participant will solve the problem if\n\n- $a_i \\ge d$, i.e., their strength\
  \ is not less than the problem's difficulty, or\n- $s_i = t$, and $b_i \\ge d$,\
  \ i.e., their specialization matches the problem's topic, and their wisdom is not\
  \ less than the problem's difficulty.\n\nCheops wants to choose the problems in\
  \ such a way that each participant from city $i$ will solve strictly more problems\
  \ than each participant from city $j$, for all $i < j$.\n\nPlease find a set of\
  \ at most $5n$ problems, where the topics of all problems are distinct, so that\
  \ Cheops' will is satisfied, or state that it is impossible.\n\n### Input\n\nEach\
  \ test contains multiple test cases. The first line contains the number of test\
  \ cases $T$ ($1 \\le T \\le 10^4$). The description of the test cases follows.\n\
  \nThe first line of each test case contains two integers $n$, $m$ ($2 \\le m \\\
  le n \\le 3 \\cdot {10}^5$) -- the number of participants and the number of cities.\n\
  \nThe following $n$ lines describe the participants. The $i$-th line contains three\
  \ integers --$a_i$, $b_i$, $s_i$ ($0 \\le a_i, b_i, s_i \\le {10}^9$, $a_i \\le\
  \ b_i$) -- strength, wisdom, and specialization of the $i$-th participant, respectively.\n\
  \nThe next $m$ lines describe the cities. In the $i$-th line, the first number is\
  \ an integer $k_i$ ($1 \\le k_i \\le n$) -- the number of participants from the\
  \ $i$-th city. It is followed by $k_i$ integers $q_{i, 1}, q_{i, 2}, \\ldots, q_{i,\
  \ k_i}$ -- ($1 \\le q_{i, j} \\le n$, $1 \\le j \\le k_i$) -- the indices of the\
  \ participants from this city. It is guaranteed that each participant is mentioned\
  \ exactly once.\n\nIt is guaranteed that the sum of $n$ over all test cases does\
  \ not exceed $3 \\cdot 10^5$.\n\n### Output\n\nFor each test case, if there exists\
  \ a set of problems that satisfies Cheops' conditions, then in the first line output\
  \ a single integer $p$ ($1 \\le p \\le 5n$) -- the number of problems in your solution.\n\
  \nThen output $p$ lines, each containing two integers $d$ and $t$ ($0 \\le d, t\
  \ \\le {10}^9$) -- the difficulty and topic of the respective problem. The topics\
  \ must be distinct.\n\nIf there is no set of problems that meets Cheops' wishes,\
  \ print $-1$ instead.\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n5 2\n\n5 7\
  \ 1\n\n6 7 2\n\n3 9 2\n\n5 10 3\n\n4 4 1\n\n2 1 2\n\n3 3 4 5\n\n2 2\n\n1 2 1\n\n\
  1 2 1\n\n1 2\n\n1 1\n\n```\n\n#### Output #1\n\n```\n7\n6 4\n6 5\n5 6\n5 7\n4 8\n\
  4 9\n7 1\n-1\n```"
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
