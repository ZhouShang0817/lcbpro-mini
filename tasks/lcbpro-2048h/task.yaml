author: LiveCodeBench Pro Team
author_email: shz060@ucsd.edu
difficulty: hard
instruction: "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create\
  \ a C++17 solution file at /app/main.cpp.\nThis task does not include local test\
  \ cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit)\
  \ to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n\
  \  3) passes only if the judge returns passed == true.\n\nEnvironment variables\
  \ (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n\
  \  - PID: problem id (default 2048H)\n  - LANG: language (default cpp)\n  - CODE_PATH:\
  \ path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds\
  \ (default 120)\n\nKevin is exploring problems related to binary strings in Chinatown.\
  \ When he was at a loss, a stranger approached him and introduced a peculiar operation:\n\
  \n- Suppose the current binary string is $ t $, with a length of $ \\vert t \\vert\
  \ $. Choose an integer $ 1 \\leq p \\leq \\vert t \\vert $. For all $ 1 \\leq i\
  \ < p $, simultaneously perform the operation $ t_i = \\max(t_i, t_{i+1}) $, and\
  \ then delete $ t_p $.\n\nFor example, suppose the current binary string is 01001,\
  \ and you choose $ p = 4 $. Perform $ t_i = \\max(t_i, t_{i+1}) $ for $t_1$, $t_2$,\
  \ and $ t_3 $, transforming the string into 11001, then delete $ t_4 $, resulting\
  \ in 1101.\n\nKevin finds this strange operation quite interesting. Thus, he wants\
  \ to ask you: Given a binary string $ s $, how many distinct non-empty binary strings\
  \ can you obtain through any number of operations (possibly zero)?\n\nSince the\
  \ answer may be very large, you only need to output the result modulo $998\\,244\\\
  ,353$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains\
  \ a single integer $t$ ($1\\le t \\le 10^4$) -- the number of test cases.\n\nFor\
  \ each test case, the only line contains a binary string $ s $ ($ 1 \\le \\lvert\
  \ s \\rvert \\le 10^6 $).\n\nIt is guaranteed that the sum of $\\lvert s \\rvert$\
  \ over all test cases does not exceed $10^6$.\n\n### Output\n\nFor each test case,\
  \ print a single integer in the only line of the output -- the number of distinct\
  \ non-empty binary strings you can obtain, modulo $998\\,244\\,353$.\n\n### Example\n\
  \n#### Input #1\n\n```\n\n2\n\n11001\n\n000110111001100\n\n```\n\n#### Output #1\n\
  \n```\n9\n73\n```\n\n### Note\n\nIn the first test case, all the binary strings\
  \ you can obtain are: 11001, 1001, 1101, 001, 101, 111, 01, 11, and 1. There are\
  \ $ 9 $ in total."
max_agent_timeout_sec: 300
max_test_timeout_sec: 180
tags: []
